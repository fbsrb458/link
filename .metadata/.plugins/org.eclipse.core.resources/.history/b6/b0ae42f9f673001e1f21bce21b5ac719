package com.myweb.www.handler;

import java.io.File;
import java.nio.file.Paths;
import java.util.Iterator;
import java.util.List;

import javax.inject.Inject;

import org.joda.time.LocalDate;
import org.joda.time.LocalDateTime;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import com.myweb.www.domain.FileVO;
import com.myweb.www.repository.FileDAO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component //내가 만든 클래스 객체
public class FileSweeprt {
	//일점 시점에서 (예약시점) DB와 현재 업로드 파일 폴더를 비교하여 DB에는 없고, 
	//upload 경로에는 존재하는  파일을 찾아서 삭제하는 기능.

	
	private final String BASE_PATH = "D:\\_myweb\\_java\\fileupload\\";
	
	//FileDAO 값을 비교함
	@Inject
	private FileDAO fdao;
	
	
	//초 분 시 일 월 요일 년도 기준으로 처리함
	//년도만 생략 가능함
	@Scheduled(cron = "0 0 22 * * *")
	public void fileSweeper() {
		log.info(">>>> FileSweeper Running Start : { } > "+ LocalDateTime.now());
		
		//DB에 등록된 파일 목록 가져오기
		List<FileVO> dblist = fdao.selectListAllFiles();
		
		//저장소 검색할 때 필요할 파일 경로 리스트(실제 존재해야 될 리스트) List<String> String 처리함
		List<String> currFiles = new ArraryList<String>();
		
		for(FileVO fvo : dblist) {
			String filePath = fvo.getSaveDir()+"\\"+fvo.getUuid();
			String fileName = fvo.getFileName();
			currFiles.add(BASE_PATH + filePath + "_" + fileName);
		
			//이미지 파일이면 썸네일도 경로 추가
			if(fvo.getFileType() > 0) {
				currFiles.add(BASE_PATH + filePath + "_th_"+ fileName);
			}
		}
		
		//날짜을 반영한 폴더 구조 경로 만들기
		LocalDate now = LocalDate.now();
		String today = now.toString();
		today = today.replace("-", File.separator);
		
		
		//경로를 기반을 저장되어있는 파일을 검색
		File dir = Paths.get(BASE_PATH + today).toFile(); 
		//allFileObjects 실제 저장되어있는 곳
		File[] allFileObjects = dir.listFiles();
		
		//실제 저장되어 있는 파일과 DB에 존재하는 파일을 비교하여 없는 삭제 진행
		for(File file : allFileObjects) {
			String storedFileName = file.toPath().toString();
			if(!currFiles.contains(storedFileName)) { // !
				file.delete(); //파일 삭제 //없으면 해당을 파일을 딜리트
				log.info(">>>>> delete File > {} >> "+ storedFileName);
			}
		}
		log.info(">>>> FileSweeper Running end : { } > "+ LocalDateTime.now());
	}
	
	
	
	
	
	
	
	
}
